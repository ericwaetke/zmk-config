/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
        };

        combo_3 {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&to 2>;
        };

        combo_ent {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp RET>;
        };

        combo_1 {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&to 1>;
        };

        combo_1_high {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&to 1>;
        };

        combo_g {
            timeout-ms = <15>;
            key-positions = <12 13>;
            bindings = <&kp G>;
            layers = <0>;
        };

        combo_j {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp J>;
            layers = <0>;
        };

        combo_p {
            timeout-ms = <15>;
            key-positions = <16 17>;
            bindings = <&kp P>;
            layers = <0>;
        };

        combo_b {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp B>;
            layers = <0>;
        };

        combo_scol {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp SEMI>;
            layers = <0>;
        };

        combo_com {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp COMMA>;
            layers = <0>;
        };

        combo_minus {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };

        combo_slsh {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp SLASH>;
            layers = <0>;
        };

        combo_sqt {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp SQT>;
            layers = <1>;
        };

        combo_dqt {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp DQT>;
            layers = <1>;
        };

        combo_bslh {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp BSLH>;
            layers = <1>;
        };

        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LBKT>;
            layers = <1>;
        };

        combo_n0 {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp N0>;
            layers = <3>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LALT>;
            layers = <2>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp DEL>;
            layers = <2>;
        };

        combo_left {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LEFT>;
            layers = <2>;
        };

        combo_lclk {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&mkp LCLK>;
            layers = <2>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hsl: homerow_shifts_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&to>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bl: layertap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&to>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Y         &kp C       &kp L       &kp M                 &kp K             &kp Z  &kp F       &kp U       &mt COMMA MINUS  &kp BACKSPACE
&kp I         &hm LCTL S  &hm LALT R  &hm LGUI T            &kp G             &kp P  &hm RGUI N  &hm RALT E  &kp A            &kp O
&hs LSHIFT Q  &kp V       &kp W       &kp D                 &kp J             &kp B  &kp H       &kp Y       &td EXCL DOT     &hs RSHIFT X
                                      &mt LC(LS(LALT)) SPC  &kt LEFT_SHIFT    &to 1  &kp E
            >;

            label = "Layer 1";
        };

        layer_1 {
            bindings = <
&trans            &kp ATSN        &td LC(LG(LS(N4))) LS(N3)  &kp DLLR               &trans    &trans  &kp LS(COMMA)  &kp LS(DOT)    &kp CARET      &trans
&kp TAB           &hm LCTL EQUAL  &hm LALT LA(RBKT)          &hm LGUI LA(LS(RBKT))  &trans    &trans  &hm RGUI LBRC  &hm RALT RBRC  &hm RCTL PIPE  &kp AMPS
&hs LSHIFT TILDE  &kp GRAVE       &kp LA(LBKT)               &kp LA(LS(LBKT))       &to 0     &to 3   &kp LPRN       &kp RPRN       &kp RBKT       &kp RSHIFT
                                                             &to 0                  &trans    &trans  &to 3
            >;

            label = "Layer 2";
        };

        layer_2 {
            bindings = <
&trans      &mwh SCROLL_LEFT  &mmv MOVE_UP    &mwh SCROLL_RIGHT  &trans    &trans    &kp LC(LS(TAB))  &kp RC(TAB)    &kp LG(LBKT)    &trans
&kp TAB     &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &trans    &trans    &kp DOWN         &hm RALT UP    &hm RCTL RIGHT  &kp LG(RBKT)
&kp LSHIFT  &mkp RCLK         &mwh SCROLL_UP  &mwh SCROLL_DOWN   &to 0     &kp RGUI  &td HOME PG_DN   &td END PG_UP  &trans          &kp RSHIFT
                                              &to 0              &trans    &trans    &kp RGUI
            >;

            label = "Layer 3";
        };

        layer_3 {
            bindings = <
&kp ESCAPE     &kp C_PP  &kp C_PREV            &kp C_NEXT            &kp UNDERSCORE      &kp KP_MINUS     &kp N7       &kp N8  &kp N9      &kp BACKSPACE
&kp TAB        &trans    &hm LALT C_VOL_DN     &hm LGUI C_VOL_UP     &kp KP_PLUS         &kp EQUAL        &hm RGUI N4  &kp N5  &kp N6      &kp ENTER
&hsl LSHIFT 4  &kp STAR  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp KP_DOT          &kp KP_NUMBER_0  &kp N1       &kp N2  &td DOT N3  &to 2
                                               &to 0                 &kp LEFT_COMMAND    &kp RIGHT_ALT    &to 1
            >;

            label = "Layer 4";
        };

        bt {
            bindings = <
&trans       &trans      &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans
&bootloader  &trans      &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans
&bt BT_PRV   &bt BT_NXT  &bt BT_CLR  &trans  &to 0     &to 1   &trans  &trans  &trans  &trans
                                     &to 0   &trans    &trans  &to 1
            >;
        };
    };
};
